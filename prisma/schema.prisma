// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id          String        @id @default(uuid())
  name        String
  password    String
  email       String        @unique
  avatar      String?
  cell        String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  providerId  String?
  appointment Appointment[]
}

model Provider {
  id           String  @id @default(uuid())
  name         String
  password     String
  email        String  @unique
  avatar       String?
  cell         String
  cnpj         String  @unique
  cpf          String  @unique
  city         String
  locality     String
  home_number  String
  postal_code  String
  region_code  String
  razao_social String  @unique

  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  appointment Appointment[]
  workhour    Workhour?
  Vocation    Vocation[]
  Service     Service[]
}

enum EAppointment {
  pendente
  realizado
  nao_realizado
}

model Appointment {
  id             String       @id @default(uuid())
  start          DateTime
  end            DateTime
  fk_client_id   String?
  fk_provider_id String
  service        String
  client_name    String
  status         EAppointment

  provider   Provider? @relation(fields: [fk_provider_id], references: [id])
  client     Client?   @relation(fields: [fk_client_id], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Order      Order?
}

model Service {
  id          String  @id @default(uuid())
  name        String
  description String
  amount      Int
  duration    Int
  image       String?

  fk_provider_id String
  provider       Provider @relation(fields: [fk_provider_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Workhour {
  id             String   @id @default(uuid())
  from           Int
  at             Int
  week           Json[]
  provider       Provider @relation(fields: [fk_provider_id], references: [id])
  fk_provider_id String   @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum VocationType {
  MENSAL
  DIARIA
  SEMANAL
}

model Vocation {
  id             String       @id @default(uuid())
  type           VocationType
  start          DateTime
  end            DateTime
  weekend        Json[]
  fk_provider_id String
  provider       Provider     @relation(fields: [fk_provider_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum ETypePayment {
  CREDIT_CARD
  PIX
  MONEY
}

enum EEstatus {
  PENDING
  RECEIVED
  CONFIRMED
  OVERDUE
  REFUNDED
}

model Order {
  id           String       @id @default(uuid())
  payment_type ETypePayment @default(MONEY)
  status       EEstatus
  amount       Int

  apointment    Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId String      @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
